User.first.id
User.first
exit
User.all
User.all
User.create({name: "テストユーザー", email: "test@example.com", password: "password", password_confirmation: "password"})
User.all
exit
Message.all
exit
Message.all
exit
User.all
Message.all
MessagesController.index
MessagesController:index
MessagesController.index
exit
User.all
exit
Room.create({name: "random"})
Room.create({name: "general"})
Room.create({name: "memory"})
Room.all
exit
Room.all
exit
p ActiveRecord::Base.connection.execute('select tables;')
p ActiveRecord::Base.connection.execute('select tables')
p ActiveRecord::Base.connection.execute('select tables;')
ActiveRecord::Base.connection.execute('select tables')
ActiveRecord::Base.connection.execute('select tables;')
ActiveRecord::Base.connection.execute('dt')
ActiveRecord::Base.connection.execute('\dt')
ActiveRecord::Base.connection.execute('\dt;')
ActiveRecord::Base.connection.execute('\dt')
exit
User.find(1).messages
RoomUser.all
User.find(1).update({room_id: 1})
Message.find(1).update({room_id: 1})
Message.find(2).update({room_id: 1})
Message.find(3).update({room_id: 1})
Message.find(10).update({room_id: 1})
User.find(1).update({room_id: 1})
RoomUser.all
User.find(1).messages
Room.all
User.find(1).update({room_id: 1})Room.messages
Room.find(1).messages
RoomUser.create(user_id: 1, room_id: 1)
User.find(1).rooms
User.find(1).rooms
exit
User.find(1).rooms
User.find(1).room_users
exit
User.find(1).rooms
User.find(1).room_users
exit
User.find(1).room_users
User.find(1).room_users.room
User.find(1).room_users
User.find(1).room_users[0].room
User.find(1).room_users[0].room.messages
exit
RoomUser.create(user_id: 1, room_id: 2)
RoomUser.create(user_id: 1, room_id: 3)
      Room.create({name: info})
exit
Room.create({name: "info"})
RoomUser.create(user_id: 1, room_id: 4)
Room.find(1).messages
exit
Room.find(1)
room = Room.find(1)
room.messages
room.messages
Message.all
Messages.find(7).update({room_id: 1})
Message.find(7).update({room_id: 1})
Message.find(8).update({room_id: 1})
Message.find(9).update({room_id: 1})
Message.find(11).update({room_id: 1})
Message.all
exit
User.find(1).room_users
User.find(1).room_users.room
User.find(1).room_users[0].room
User.find(1).room_users[0].room.messages
User.find(1).room_users[0].room.messages.last
User.find(1).room_users[0].room.messages.last.content
exit
Message.all
Message.all
qqq
Message.all
Message.find(41).content
Message.find(41).update(['content' => "なんでもいいよ01"])
Message.find(41).update([content: "なんでもいいよ01"])
Message.find(41).update([content: "修正しました"])
Message.find(41).update(content: "修正しました")
Message.find(41).update(content: "再修正しました")
Message.all
Message.all
RoomUser.all
exit
Message.destroy_all
Message.all
exit
Message.all
Message.find(47).update(content: "修正")
exit
User.all
RoomUser.all
RoomUser.creatre(user_id: 2, room_id: 1)
RoomUser.create(user_id: 2, room_id: 1
exit
Room.find(1)
Room.find(1).users
Room.find(1).room_users
Room.find(1).room_users.users
Room.find(1).room_users.user
Room.find(1).room_users
Room.find(1).users
Room.find(1).room_users
Room.find(1).room_users.users
Room.find(1).room_users
Room.find(1).room_users.room
Room.find(1).room_users.rooms
Room.find(1).room_users
Room.find(1).room_users
Room.find(1).room_users.users
Room.find(1).room_users.user
Room.find(1).room_users.room
Room.find(1)
Room.find(1).room_users
Room.find(1).room_users.length
exit
Message.destroy_all
exit
Message.all
Message.destroy_all
rooms = ["gereral", "random", "info", "memory"]
rooms = ["gereral", "random", "info", "memory"]
rooms = ["gereral", "random", "info", "memory"]
rooms.each do |room|\
  Room.create(name: room)\
  puts "#{room}"\
  \
end
5.times do |number|\
  user = User.first.id\
  Message.create(content: "#{number}番目のメッセージです！", user_id: user, room_id: Room.first.id)\
  puts "#{number}番目のメッセージを作成しました"\
end
Message.all
Room.all
Room.all.select{|room| room.messages.last.present?}
Room.all.select{|room| room.messages.last.present?}
a = Room.all.select{|room| room.messages.last.present?}
a
a.messages.last
a.messages
a[0]
a[0].messages
a[0].messages.last
hasLastMessageRoom = rooms.select{|room| room.messages.last.present?}
    rooms = Room.all
    hasLastMessageRoom = rooms.select{|room| room.messages.last.present?}
hasLastMessageRoom
hasLastMessageRoom[0]
hasLastMessageRoom.map{|room| p room}
hasLastMessageRoom.map{|room| }
hasLastMessageRoom.map{|room| }
hasLastMessageRoom.map{|room| {\
    id: room.id,\
    name: room.name,\
    last_message: room.messages.last.content,\
    timestamp: room.messages.last.created_at\
  }\
}
room = Room.find(1).select{|room| {\
    id: room.id,\
    name: room.name\
  }}
room = Room.find(1)->only(:id, :name)
room = Room.find(1).only(:id, :name)
room = Room.find(1).slice(:id, :name)
room
rooms.each do |room|\
  last_message = room.messages.last\
  if last_message.present?\
    last_message_content = last_message.content\
    last_message_created_at = last_message.created_at\
  end\
  data = {\
    id: room.id,\
    name: room.name,\
    last_message: last_message_content,\
    timestamp: last_message_created_at\
  }\
  sendData.push(data)\
end
Room.all.each do |room|\
  last_message = room.messages.last\
  if last_message.present?\
    last_message_content = last_message.content\
    last_message_created_at = last_message.created_at\
  end\
  data = {\
    id: room.id,\
    name: room.name,\
    last_message: last_message_content,\
    timestamp: last_message_created_at\
  }\
  sendData.push(data)\
end
Room.all.each do |room|\
  last_message = room.messages.last\
  if last_message.present?\
    last_message_content = last_message.content\
    last_message_created_at = last_message.created_at\
  end\
  data = {\
    id: room.id,\
    name: room.name,\
    last_message: last_message_content,\
    timestamp: last_message_created_at\
  }\
  p data\
end
Room.all.each do |room|\
  last_message = room.messages.last\
  if last_message.present?\
    last_message_content = last_message.content\
    last_message_created_at = last_message.created_at\
  end\
  data = {\
    id: room.id,\
    name: room.name,\
    last_message: last_message_content,\
    timestamp: last_message_created_at\
  }\
  p data\
end
User.all
exit
Message.destroy_all
User.destroy_all
exit
User.create(["name": "テストユーザー", "email": "test@example.com", "password": "password"])
User.create(["name": "テストユーザー02", "email": "test2@example.com", "password": "password"])
User.create(["name": "テストユーザー03", "email": "test3@example.com", "password": "password"])
exit
